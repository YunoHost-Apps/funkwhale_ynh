#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

admin_mail=$(ynh_user_get_info --username="$admin" --key="mail")

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression "Setting up source files..."

ynh_setup_source --dest_dir="$install_dir/api" --source_id="api"
ynh_setup_source --dest_dir="$install_dir/front" --source_id="front"

mkdir -p $install_dir/config

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Configuring NGINX web server..."

ynh_config_add --template="funkwhale_proxy.conf" --destination="/etc/nginx/conf.d/$domain.d/funkwhale_proxy.conf"
ynh_config_add_nginx

#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression "Creating a data directory..."

mkdir -p $data_dir/data
mkdir -p $data_dir/data/{static,media,music}

chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir/"
chown -R $app:www-data "$data_dir/"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression "Adding $app's configuration..."

key=$(ynh_string_random --length=45 | base64)
redis_db=$(ynh_redis_get_free_db)

ynh_app_setting_set --key=key --value=$key
ynh_app_setting_set --key=redis_db --value=$redis_db

ynh_config_add --template="env.prod" --destination="$install_dir/config/.env"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Configuring $app's systemd service..."

ynh_config_add --template="funkwhale.target" --destination="/etc/systemd/system/$app.target"

# Create a dedicated systemd config
ynh_config_add_systemd --service="${app}-server" --template="funkwhale-server.service"
ynh_config_add_systemd --service="${app}-worker" --template="funkwhale-worker.service"
ynh_config_add_systemd --service="${app}-beat"   --template="funkwhale-beat.service"

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression "Installing Python dependencies..."

if [ $YNH_ARCH == "armhf" ] || [ $YNH_ARCH == "armel" ]
then
# Install rustup is not already installed
# We need this to be able to install cryptgraphy
export PATH="$PATH:$install_dir/.cargo/bin:$install_dir/.local/bin:/usr/local/sbin"
    if [ -e $install_dir/.rustup ]; then
    ynh_exec_as_app PATH=$PATH rustup update
    else
    ynh_exec_as_app bash -c 'curl -sSf -L https://static.rust-lang.org/rustup.sh | sh -s -- -y --default-toolchain=stable --profile=minimal'
    fi
fi

pushd $install_dir
	python3 -m venv $install_dir/venv
	source $install_dir/venv/bin/activate
	ynh_hide_warnings pip install --upgrade pip wheel toml
	ynh_hide_warnings pip install --editable ./api
popd

#=================================================
# BUILDING FUNKWHALE
#=================================================
ynh_script_progression "Building funkwhale..."

pushd $install_dir
	source $install_dir/venv/bin/activate

	# needed for enabling the 'unaccent' extension
	ynh_psql_db_shell <<< "ALTER USER $db_user WITH SUPERUSER;"

	ynh_hide_warnings ynh_exec_as_app $install_dir/venv/bin/funkwhale-manage migrate
	ynh_psql_db_shell <<< "ALTER USER $db_user WITH NOSUPERUSER;"


	echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('$admin', '$admin_mail', 'funkwhale') " | ynh_hide_warnings python api/manage.py shell
	echo "yes" | ynh_hide_warnings ynh_exec_as_app $install_dir/venv/bin/funkwhale-manage collectstatic
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# LOGROTATE
#=================================================
ynh_script_progression "Configuring logrotate to manage application logfiles"

ynh_config_add_logrotate

touch /var/log/$app/${app}-server.log
touch /var/log/$app/${app}-worker.log
touch /var/log/$app/${app}-beat.log

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Integrating service in YunoHost..."

yunohost service add "${app}-beat" --description="${app} celery beat process" --log="/var/log/$app/${app}-beat.log"
yunohost service add "${app}-server" --description="${app} application server" --log="/var/log/$app/${app}-server.log"
yunohost service add "${app}-worker" --description="${app} celery worker" --log="/var/log/$app/${app}-worker.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service="${app}-beat" --action="start" --log_path="systemd"
ynh_systemctl --service="${app}-server" --action="start" --log_path="systemd" --wait_until="Application startup complete"
ynh_systemctl --service="${app}-worker" --action="start" --log_path="systemd" --wait_until="ready"

#=================================================
# SETUP FAIL2BAN
#=================================================
ynh_script_progression "Configuring Fail2Ban..."

ynh_config_add_fail2ban --logpath="/var/log/nginx/$domain-access.log" --failregex="<HOST>.* \"POST /api/v1/users/login HTTP/\d.\d\" 40"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Installation of $app completed"
