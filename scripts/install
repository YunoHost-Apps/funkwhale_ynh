#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

admin_mail=$(ynh_user_get_info --username="$admin" --key="mail")

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir/api" --source_id="api"
ynh_setup_source --dest_dir="$install_dir/front" --source_id="front"

mkdir -p $install_dir/config

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..." --weight=1

mkdir -p $data_dir/{static,media,music}

chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R $app:www-data "$data_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --weight=1

key=$(ynh_string_random --length=45 | base64)
redis_db=$(ynh_redis_get_free_db)

ynh_app_setting_set --app=$app --key=key --value=$key
ynh_app_setting_set --app=$app --key=redis_db --value=$redis_db

ynh_add_config --template="../conf/env.prod" --destination="$install_dir/config/.env"

chmod 400 "$install_dir/config/.env"
chown $app:$app "$install_dir/config/.env"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=1

ynh_add_config --template="../conf/funkwhale.target" --destination="/etc/systemd/system/$app.target"

# Create a dedicated systemd config
ynh_add_systemd_config --service="${app}-server" --template="funkwhale-server.service"
ynh_add_systemd_config --service="${app}-worker" --template="funkwhale-worker.service"
ynh_add_systemd_config --service="${app}-beat"   --template="funkwhale-beat.service"

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing Python dependencies..." --weight=1

pushd $install_dir
	python3 -m venv $install_dir/virtualenv
	source $install_dir/virtualenv/bin/activate
	pip install --upgrade pip
	pip install --upgrade setuptools
	ynh_exec_warn_less pip install wheel

	ls -lah /$install_dir/
	ls -lah /$install_dir/api/
	ls -lah /$install_dir/front/
	# Workaround for error AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
	ynh_replace_string --match_string="pyOpenSSL~=20.0.1" --replace_string="pyOpenSSL~=21.0.0" --target_file="$install_dir/api/requirements/base.txt"
	ynh_exec_warn_less pip install -r api/requirements.txt
popd

#=================================================
# BUILDING FUNKWHALE
#=================================================
ynh_script_progression --message="Building funkwhale..." --weight=1

pushd $install_dir
	source $install_dir/virtualenv/bin/activate

	# needed for enabling the 'unaccent' extension
	ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH SUPERUSER;" --database="$db_name"
	ynh_exec_warn_less python api/manage.py migrate
	ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH NOSUPERUSER;" --database="$db_name"
	echo "from django.contrib.auth import get_user_model; User = get_user_model(); User.objects.create_superuser('$admin', '$admin_mail', 'funkwhale') " | ynh_exec_warn_less python api/manage.py shell
	echo "yes" | ynh_exec_warn_less python api/manage.py collectstatic
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add "${app}-beat"
yunohost service add "${app}-server"
yunohost service add "${app}-worker"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name="${app}-beat" --action="start" --log_path="systemd" --line_match="Started"
ynh_systemd_action --service_name="${app}-server" --action="start" --log_path="systemd" --line_match="Application startup complete"
ynh_systemd_action --service_name="${app}-worker" --action="start" --log_path="systemd" --line_match="ready"

#=================================================
# SETUP FAIL2BAN
#=================================================
ynh_script_progression --message="Configuring Fail2Ban..." --weight=1

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/nginx/${domain}-access.log" --failregex="<HOST>.* \"POST /api/v1/token/ HTTP/1.1\" 400 68.*$" --max_retry=5

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
