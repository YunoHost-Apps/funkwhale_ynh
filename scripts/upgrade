#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
db_name=$(ynh_app_setting_get --app=$app --key=db_name)
db_user=$db_name
db_pwd=$(ynh_app_setting_get --app=$app --key=db_pwd)
datadir=$(ynh_app_setting_get --app=$app --key=datadir)
port=$(ynh_app_setting_get --app=$app --key=port)
redis_db=$(ynh_app_setting_get --app=$app --key=redis_db)
key=$(ynh_app_setting_get --app=$app --key=key)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..."

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..."

# If redis_db doesn't exist, create it
if [ -z "$redis_db" ]; then
	redis_db=$(ynh_redis_get_free_db)
	ynh_app_setting_set --app=$app --key=redis_db --value=$redis_db
fi

# If db_pwd doesn't exist, create it
if [ -z "$db_pwd" ]; then
	db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)
	ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd
fi

# Cleaning legacy permissions
if ynh_legacy_permissions_exists; then
	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# Restore it if the upgrade fails
	ynh_clean_check_starting
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --action="stop" --service_name="${app}-beat" --log_path="systemd" --line_match="Stopped"
ynh_systemd_action --action="stop" --service_name="${app}-server" --log_path="systemd" --line_match="Stopped"
ynh_systemd_action --action="stop" --service_name="${app}-worker" --log_path="systemd" --line_match="Stopped"

#=================================================
# MOVE DATAS
#=================================================

# If datadir doesn't exist, create it
if [ -z "$datadir" ]; then
	# Do a full backup before moving datas
	yunohost backup create --apps $app

	datadir="/home/yunohost.app/${app}/data"
	ynh_script_progression --message="Moving datas to $datadir..."	

	mkdir -p $datadir
	pushd $datadir
		mkdir -p static media music
	popd
	
	ynh_backup_if_checksum_is_different --file="$final_path/code/config/.env"
	mkdir -p $final_path/config
	rsync -a $final_path/code/config/ $final_path/config/
	chmod 600 $final_path/config/.env
	ynh_store_file_checksum --file="$final_path/config/.env"
	ynh_delete_file_checksum --file="$final_path/code/config/.env"
	
	if [ -d "$final_path/code/data/static/" ]; then
		rsync -a $final_path/code/data/static/ $datadir/static/
	fi
	if [ -d "$final_path/media/" ]; then
		rsync -a $final_path/media/ $datadir/media/
	fi
	if [ -d "$final_path/import/" ]; then
		rsync -a $final_path/import/ $datadir/music/
	fi
	
	ynh_secure_remove --file="$final_path/code"
	ynh_secure_remove --file="$final_path/media"
	ynh_secure_remove --file="$final_path/import"

	ynh_app_setting_set --app=$app --key=datadir --value=$datadir
	
	upgrade_type="UPGRADE_APP"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..."

	ynh_secure_remove --file="$final_path/api"
	ynh_secure_remove --file="$final_path/front"
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$final_path/api" --source_id="api"
	ynh_setup_source --dest_dir="$final_path/front" --source_id="front"
fi

chmod -R 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_add_nginx_config "datadir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# SPECIFIC UPGRADE
#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing Python dependencies..."

pushd $final_path
	ynh_secure_remove --file="$final_path/virtualenv"
	python3 -m venv $final_path/virtualenv
	source $final_path/virtualenv/bin/activate
	pip install --upgrade pip
	pip install --upgrade setuptools
	pip install wheel
	pip install -r api/requirements.txt
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a config file..."

ynh_add_config --template="../conf/env.prod" --destination="$final_path/config/.env"

chmod 400 "$final_path/config/.env"
chown $app:$app "$final_path/config/.env"

#=================================================
# UPGRADE FUNKWHALE
#=================================================
ynh_script_progression --message="Upgrading Funkwhale..."

pushd $final_path
	source $final_path/virtualenv/bin/activate

	# needed for enabling the 'unaccent' extension
	ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH SUPERUSER;" --database="$db_name"
	python api/manage.py migrate
	ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH NOSUPERUSER;" --database="$db_name"

	echo "yes" | python api/manage.py collectstatic --clear --noinput

	# https://code.eliotberriot.com/funkwhale/funkwhale/tags/0.16 # users-now-have-an-activitypub-actor-manual-action-required
	# python api/manage.py script create_actors --no-input
	# https://code.eliotberriot.com/funkwhale/funkwhale/tags/0.16 #image-thumbnails-manual-action-required
	# python api/manage.py script create_image_variations --no-input

	# https://docs.funkwhale.audio/upgrading/0.17.html#upgrade-instructions
	# python api/manage.py script migrate_to_user_libraries --no-input

	# Delete pre 0.17 federated tracks [manual action suggested]
	# https://dev.funkwhale.audio/funkwhale/funkwhale/tags/0.18
	# python api/manage.py script delete_pre_017_federated_uploads --no-input

	# Delete the original thumbnails and generate new ones for
	# higher quality images
	# https://docs.funkwhale.audio/changelog.html#increased-quality-of-jpeg-thumbnails-manual-action-required
	ynh_secure_remove --file="$final_path/media/__sized__"
	python api/manage.py fw media generate-thumbnails
popd

chmod -R 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..."

ynh_add_config --template="../conf/funkwhale.target" --destination="/etc/systemd/system/$app.target"

# Create a dedicated systemd config
ynh_add_systemd_config --service="${app}-server" --template="funkwhale-server.service" --others_var="datadir"
ynh_add_systemd_config --service="${app}-worker" --template="funkwhale-worker.service" --others_var="datadir"
ynh_add_systemd_config --service="${app}-beat"   --template="funkwhale-beat.service" --others_var="datadir"

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add "${app}-beat"
yunohost service add "${app}-server"
yunohost service add "${app}-worker"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name="${app}-beat" --action="start" --log_path="systemd" --line_match="Running with the following plugins enabled"
ynh_systemd_action --service_name="${app}-server" --action="start" --log_path="systemd" --line_match="Application startup complete"
ynh_systemd_action --service_name="${app}-worker" --action="start" --log_path="systemd" --line_match="Running with the following plugins enabled"

#=================================================
# UPGRADE FAIL2BAN
#=================================================
ynh_script_progression --message="Reconfiguring Fail2Ban..."

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/nginx/$domain-access.log" --failregex="<HOST>.* \"POST /api/v1/token/ HTTP/1.1\" 400 68.*$" --max_retry=5

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
