#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
#REMOVEME? ynh_script_progression --message="Loading installation settings..." --weight=1

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

#REMOVEME? domain=$(ynh_app_setting_get --app=$app --key=domain)
#REMOVEME? path=$(ynh_app_setting_get --app=$app --key=path)
#REMOVEME? #REMOVEME? install_dir=$(ynh_app_setting_get --app=$app --key=install_dir)
#REMOVEME? db_name=$(ynh_app_setting_get --app=$app --key=db_name)
#REMOVEME? db_user=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=db_pwd)
#REMOVEME? data_dir=$(ynh_app_setting_get --app=$app --key=data_dir)
#REMOVEME? port=$(ynh_app_setting_get --app=$app --key=port)
#REMOVEME? redis_db=$(ynh_app_setting_get --app=$app --key=redis_db)
#REMOVEME? key=$(ynh_app_setting_get --app=$app --key=key)

#=================================================
# CHECK VERSION
#=================================================
ynh_script_progression --message="Checking version..." --weight=1

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
#REMOVEME? ynh_script_progression --message="Backing up the app before upgrading (may take a while)..." --weight=1

# Backup the current version of the app
#REMOVEME? ynh_backup_before_upgrade
#REMOVEME? ynh_clean_setup () {
	# Restore it if the upgrade fails
#REMOVEME? 	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --action="stop" --service_name="${app}-beat" --log_path="systemd" --line_match="Stopped"
ynh_systemd_action --action="stop" --service_name="${app}-server" --log_path="systemd" --line_match="Stopped"
ynh_systemd_action --action="stop" --service_name="${app}-worker" --log_path="systemd" --line_match="Stopped"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If redis_db doesn't exist, create it
if [ -z "$redis_db" ]; then
	redis_db=$(ynh_redis_get_free_db)
	ynh_app_setting_set --app=$app --key=redis_db --value=$redis_db
fi

# If db_pwd doesn't exist, create it
if [ -z "$db_pwd" ]; then
#REMOVEME? 	db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)
#REMOVEME? 	ynh_app_setting_set --app=$app --key=db_pwd --value=$db_pwd
fi

# Cleaning legacy permissions
#REMOVEME? if ynh_legacy_permissions_exists; then
#REMOVEME? 	ynh_legacy_permissions_delete_all

	ynh_app_setting_delete --app=$app --key=is_public
fi

#=================================================
# MOVE DATAS
#=================================================

# If data_dir doesn't exist, create it
if [ -z "$data_dir" ]; then
	# Do a full backup before moving datas
	yunohost backup create --apps $app

	data_dir="/home/yunohost.app/${app}/data"
	ynh_script_progression --message="Moving datas to $data_dir..." --weight=1

	mkdir -p $data_dir
	mkdir -p $data_dir/{static,media,music}

	chmod 750 "$data_dir"
	chmod -R o-rwx "$data_dir"
	chown -R $app:www-data "$data_dir"
	
	ynh_backup_if_checksum_is_different --file="$install_dir/code/config/.env"
	mkdir -p $install_dir/config
	rsync -a $install_dir/code/config/ $install_dir/config/
	chmod 400 $install_dir/config/.env
	ynh_store_file_checksum --file="$install_dir/config/.env"
	ynh_delete_file_checksum --file="$install_dir/code/config/.env"
	
	if [ -d "$install_dir/code/data/static/" ]; then
		rsync -a $install_dir/code/data/static/ $data_dir/static/
	fi
	if [ -d "$install_dir/media/" ]; then
		rsync -a $install_dir/media/ $data_dir/media/
	fi
	if [ -d "$install_dir/code/data/media/" ]; then
		rsync -a $install_dir/code/data/media/ $data_dir/media/
	fi
	if [ -d "$install_dir/import/" ]; then
		rsync -a $install_dir/import/ $data_dir/music/
	fi
	if [ -d "$install_dir/code/data/music/" ]; then
		rsync -a $install_dir/code/data/music/ $data_dir/music/
	fi
	
#REMOVEME? 	ynh_secure_remove --file="$install_dir/code"
#REMOVEME? 	ynh_secure_remove --file="$install_dir/media"
#REMOVEME? 	ynh_secure_remove --file="$install_dir/code/data/media"
#REMOVEME? 	ynh_secure_remove --file="$install_dir/import"
#REMOVEME? 	ynh_secure_remove --file="$install_dir/code/data/music"

#REMOVEME? 	ynh_app_setting_set --app=$app --key=data_dir --value=$data_dir

	chmod 750 "$data_dir"
	chmod -R o-rwx "$data_dir"
	chown -R $app:www-data "$data_dir"
	
	upgrade_type="UPGRADE_APP"
fi

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Making sure dedicated system user exists..." --weight=1

# Create a dedicated user (if not existing)
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

#REMOVEME? 	ynh_secure_remove --file="$install_dir/api"
#REMOVEME? 	ynh_secure_remove --file="$install_dir/front"
	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/api" --source_id="api"
	ynh_setup_source --dest_dir="$install_dir/front" --source_id="front"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Upgrading dependencies..." --weight=1

#REMOVEME? ynh_install_app_dependencies $pkg_dependencies

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading NGINX web server configuration..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing Python dependencies..." --weight=1

pushd $install_dir
#REMOVEME? 	ynh_secure_remove --file="$install_dir/virtualenv"
	python3 -m venv $install_dir/virtualenv
	source $install_dir/virtualenv/bin/activate
	pip install --upgrade pip
	pip install --upgrade setuptools
	ynh_exec_warn_less pip install wheel
	# Workaround for error AttributeError: module 'lib' has no attribute 'X509_V_FLAG_CB_ISSUER_CHECK'
	ynh_replace_string --match_string="pyOpenSSL~=20.0.1" --replace_string="pyOpenSSL~=21.0.0" --target_file="$install_dir/api/requirements/base.txt"
	ynh_exec_warn_less pip install -r api/requirements.txt
popd

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="../conf/env.prod" --destination="$install_dir/config/.env"

chmod 400 "$install_dir/config/.env"
chown $app:$app "$install_dir/config/.env"

#=================================================
# UPGRADE FUNKWHALE
#=================================================
ynh_script_progression --message="Upgrading Funkwhale..." --weight=1

pushd $install_dir
	source $install_dir/virtualenv/bin/activate

	echo "yes" | ynh_exec_warn_less python api/manage.py collectstatic --clear --noinput

	# needed for enabling the 'unaccent' extension
	ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH SUPERUSER;" --database="$db_name"
	ynh_exec_warn_less python api/manage.py migrate
	ynh_psql_execute_as_root --sql="ALTER USER $db_user WITH NOSUPERUSER;" --database="$db_name"
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Upgrading systemd configuration..." --weight=1

ynh_add_config --template="../conf/funkwhale.target" --destination="/etc/systemd/system/$app.target"

# Create a dedicated systemd config
ynh_add_systemd_config --service="${app}-server" --template="funkwhale-server.service"
ynh_add_systemd_config --service="${app}-worker" --template="funkwhale-worker.service"
ynh_add_systemd_config --service="${app}-beat"   --template="funkwhale-beat.service"

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --weight=1

yunohost service add "${app}-beat"
yunohost service add "${app}-server"
yunohost service add "${app}-worker"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

# Start a systemd service
ynh_systemd_action --service_name="${app}-beat" --action="start" --log_path="systemd" --line_match="Started"
ynh_systemd_action --service_name="${app}-server" --action="start" --log_path="systemd" --line_match="Application startup complete"
ynh_systemd_action --service_name="${app}-worker" --action="start" --log_path="systemd" --line_match="ready"

#=================================================
# UPGRADE FAIL2BAN
#=================================================
ynh_script_progression --message="Reconfiguring Fail2Ban..." --weight=1

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/nginx/$domain-access.log" --failregex="<HOST>.* \"POST /api/v1/token/ HTTP/1.1\" 400 68.*$" --max_retry=5

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..." --weight=1

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
